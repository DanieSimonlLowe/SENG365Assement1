{
	"info": {
		"_postman_id": "666603a5-be77-42d2-8e47-717702c13764",
		"name": "users tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26027584"
	},
	"item": [
		{
			"name": "user tests",
			"item": [
				{
					"name": "/reset",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/reset",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/register 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.expect(pm.response.json().userId).to.be.a('number');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adam@example.com\",\r\n  \"firstName\": \"Jane\",\r\n  \"lastName\": \"Doe\",\r\n  \"password\": \"password\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/register",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/register 200 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.expect(pm.response.json().userId).to.be.a('number');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adm@example.com\",\r\n  \"firstName\": \"Jne\",\r\n  \"lastName\": \"De\",\r\n  \"password\": \"pssword\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/register",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/register 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"ada@example.com\",\r\n  \"firstName\": \"Jane\",\r\n  \"lastName\": \"Doe\",\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/register",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/register 400 password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adam@example.com\",\r\n  \"firstName\": \"Jane\",\r\n  \"lastName\": \"Doe\",\r\n  \"password\": \"passs\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/register",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/register 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adam@example.com\",\r\n  \"firstName\": \"Jne\",\r\n  \"lastName\": \"De\",\r\n  \"password\": \"pssword\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/register",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/register 500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adm@example.com\",\r\n  \"firstName\": \"dame'da'a\\'\",\r\n  \"lastName\": \"Doe\",\r\n  \"password\": \"pssword\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/register",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/login 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.expect(pm.response.json().userId).to.be.a('number');\r",
									"    pm.expect(pm.response.json().token).to.be.a('string');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adam@example.com\",\r\n  \"password\": \"password\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/login",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/login 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adam@example.com\",\r\n  \"passord\": \"password\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/login",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/login 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adam@example.com\",\r\n  \"password\": \"passwor\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/login",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/login 500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"dame'da'a\\'\",\r\n  \"password\": \"password\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/login",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/logout 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/users/logout",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/logout 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/users/logout",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/1 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response types\", function(){\r",
									"    pm.expect(pm.response.json().email).to.be.a('String');\r",
									"    pm.expect(pm.response.json().firstName).to.be.a('String');\r",
									"    pm.expect(pm.response.json().lastName).to.be.a('String');\r",
									"})\r",
									"\r",
									"pm.test(\"expected response values\", function(){\r",
									"    pm.expect(pm.response.json().email).to.be.value('adam@example.com');\r",
									"    pm.expect(pm.response.json().firstName).to.be.value('Jane');\r",
									"    pm.expect(pm.response.json().lastName).to.be.value('Doe');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/users/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/999 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/users/999",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/1 200 all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adam@example.com\",\r\n  \"firstName\": \"Jane\",\r\n  \"lastName\": \"Doe\",\r\n  \"password\": \"new_password\",\r\n  \"currentPassword\": \"password\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/1 200 some",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"ada@example.com\",\r\n  \"firstName\": \"ane\",\r\n  \"password\": \"password\",\r\n  \"currentPassword\": \"new_password\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/1 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adam@example.com\",\r\n  \"firstName\": \"Jane\",\r\n  \"lastName\": \"Doe\",\r\n  \"password\": \"new_password\",\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/1 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 403\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adam@example.com\",\r\n  \"firstName\": \"Jane\",\r\n  \"lastName\": \"Doe\",\r\n  \"password\": \"passg\",\r\n  \"currentPassword\": \"password\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/1 403 email is already in use",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adm@example.com\",\r\n  \"firstName\": \"Jane\",\r\n  \"lastName\": \"Doe\",\r\n  \"password\": \"new_password\",\r\n  \"currentPassword\": \"password\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/1 403 identical current and new passwords",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"password\",\r\n  \"currentPassword\": \"password\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/999 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adam@example.com\",\r\n  \"firstName\": \"Jane\",\r\n  \"lastName\": \"Doe\",\r\n  \"password\": \"new_password\",\r\n  \"currentPassword\": \"password\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/999",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"999"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user.image Tests",
			"item": [
				{
					"name": "/reset",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/reset",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/register 200 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.expect(pm.response.json().userId).to.be.a('number');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adam@example.com\",\r\n  \"firstName\": \"Jane\",\r\n  \"lastName\": \"Doe\",\r\n  \"password\": \"password\"\r\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/users/register",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/1/image 404 user no image",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.test(\"status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/users/1/image",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"1",
								"image"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/999/image 404 no user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.test(\"status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"})\r",
									"\r",
									"pm.test(\"expected response\", function(){\r",
									"    pm.response.not.to.have.jsonBody();\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/users/999/image",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"999",
								"image"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}